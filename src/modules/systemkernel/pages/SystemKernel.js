import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { useState } from 'react';
import { Brain, Settings, Power, Zap, Shield, Layers, Activity, BarChart } from 'lucide-react';
import { useKernelStore } from '../store/useKernelStore';
export function SystemKernel() {
    const [activeTab, setActiveTab] = useState('modes');
    const { operatingModes, activeMode, setActiveMode, systemBehaviors, toggleBehavior, moduleStates, toggleModule } = useKernelStore();
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "mb-8", children: [_jsx("h1", { className: "text-3xl font-bold bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent", children: "System Kernel" }), _jsx("p", { className: "text-slate-400 mt-2", children: "Configure how your OS behaves. Activate modes, modules, and meta-control your life systems." })] }), _jsxs("div", { className: "flex space-x-2 mb-6", children: [_jsx("button", { onClick: () => setActiveTab('modes'), className: `px-4 py-2 rounded-lg transition-colors ${activeTab === 'modes'
                            ? 'bg-indigo-600 text-white'
                            : 'bg-slate-800 text-slate-300 hover:bg-slate-700'}`, children: "Operating Modes" }), _jsx("button", { onClick: () => setActiveTab('modules'), className: `px-4 py-2 rounded-lg transition-colors ${activeTab === 'modules'
                            ? 'bg-indigo-600 text-white'
                            : 'bg-slate-800 text-slate-300 hover:bg-slate-700'}`, children: "Module Control" }), _jsx("button", { onClick: () => setActiveTab('behavior'), className: `px-4 py-2 rounded-lg transition-colors ${activeTab === 'behavior'
                            ? 'bg-indigo-600 text-white'
                            : 'bg-slate-800 text-slate-300 hover:bg-slate-700'}`, children: "System Behavior" })] }), activeTab === 'modes' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-6", children: [_jsx(Power, { className: "w-5 h-5 text-indigo-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Operating Modes" })] }), _jsx("p", { className: "text-slate-300 mb-6", children: "Operating modes define how your system behaves across all modules. Activate a mode to instantly reconfigure your entire OS." }), _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: operatingModes.map((mode) => (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: `p-4 rounded-xl cursor-pointer transition-all ${mode.id === activeMode
                                        ? 'bg-indigo-600/20 border-2 border-indigo-500'
                                        : 'bg-slate-800/30 border border-slate-700 hover:border-slate-600'}`, onClick: () => setActiveMode(mode.id), children: [_jsxs("div", { className: "flex items-center space-x-3 mb-2", children: [_jsxs("div", { className: `p-2 rounded-lg bg-gradient-to-br ${mode.color}`, children: [mode.icon === 'zap' && _jsx(Zap, { className: "w-5 h-5 text-white" }), mode.icon === 'shield' && _jsx(Shield, { className: "w-5 h-5 text-white" }), mode.icon === 'activity' && _jsx(Activity, { className: "w-5 h-5 text-white" }), mode.icon === 'layers' && _jsx(Layers, { className: "w-5 h-5 text-white" })] }), _jsxs("div", { children: [_jsx("h4", { className: "text-sm font-medium text-white", children: mode.name }), _jsx("p", { className: "text-xs text-slate-400", children: mode.description })] })] }), _jsx("div", { className: "mt-3 space-y-2", children: mode.effects.map((effect, index) => (_jsxs("div", { className: "flex items-center space-x-2 text-xs", children: [_jsx("div", { className: "w-1.5 h-1.5 rounded-full bg-indigo-400" }), _jsx("span", { className: "text-slate-300", children: effect })] }, index))) })] }, mode.id))) })] }), _jsxs("div", { className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-4", children: [_jsx(BarChart, { className: "w-5 h-5 text-emerald-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Mode Performance" })] }), _jsx("div", { className: "p-4 bg-indigo-600/10 border border-indigo-600/20 rounded-lg", children: _jsxs("p", { className: "text-sm text-indigo-300", children: [_jsx("span", { className: "font-medium", children: "Pro Tip:" }), " Your current operating mode affects all modules. For example, \"Focus Mode\" will prioritize productivity modules and minimize distractions across your entire OS."] }) })] })] })), activeTab === 'modules' && (_jsxs("div", { className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-6", children: [_jsx(Layers, { className: "w-5 h-5 text-purple-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Module Control" })] }), _jsx("p", { className: "text-slate-300 mb-6", children: "Control which modules are active in your system. Disabled modules won't appear in your dock or dashboard." }), _jsx("div", { className: "space-y-4", children: moduleStates.map((module) => (_jsxs(motion.div, { initial: { opacity: 0, y: 10 }, animate: { opacity: 1, y: 0 }, className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg hover:bg-slate-800/50 transition-colors", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsxs("div", { className: `p-2 rounded-lg bg-gradient-to-br ${module.color}`, children: [module.icon === 'brain' && _jsx(Brain, { className: "w-4 h-4 text-white" }), module.icon === 'settings' && _jsx(Settings, { className: "w-4 h-4 text-white" }), module.icon === 'activity' && _jsx(Activity, { className: "w-4 h-4 text-white" }), module.icon === 'layers' && _jsx(Layers, { className: "w-4 h-4 text-white" })] }), _jsxs("div", { children: [_jsx("h4", { className: "text-sm font-medium text-white", children: module.name }), _jsx("p", { className: "text-xs text-slate-400", children: module.category })] })] }), _jsx("button", { onClick: () => toggleModule(module.id), className: `w-12 h-6 ${module.active ? 'bg-purple-600' : 'bg-slate-600'} rounded-full relative transition-colors`, children: _jsx("div", { className: `w-5 h-5 bg-white rounded-full absolute top-0.5 transition-transform ${module.active ? 'right-0.5' : 'left-0.5'}` }) })] }, module.id))) })] })), activeTab === 'behavior' && (_jsxs("div", { className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-6", children: [_jsx(Brain, { className: "w-5 h-5 text-amber-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "System Behavior" })] }), _jsx("p", { className: "text-slate-300 mb-6", children: "Configure how your OS behaves at a system level. These settings affect all modules and interactions." }), _jsx("div", { className: "space-y-4", children: systemBehaviors.map((behavior) => (_jsxs(motion.div, { initial: { opacity: 0, y: 10 }, animate: { opacity: 1, y: 0 }, className: "flex items-center justify-between p-4 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("h4", { className: "text-sm font-medium text-white", children: behavior.name }), _jsx("p", { className: "text-xs text-slate-400", children: behavior.description })] }), _jsx("button", { onClick: () => toggleBehavior(behavior.id), className: `w-12 h-6 ${behavior.enabled ? 'bg-amber-600' : 'bg-slate-600'} rounded-full relative transition-colors`, children: _jsx("div", { className: `w-5 h-5 bg-white rounded-full absolute top-0.5 transition-transform ${behavior.enabled ? 'right-0.5' : 'left-0.5'}` }) })] }, behavior.id))) }), _jsx("div", { className: "mt-6 p-4 bg-amber-600/10 border border-amber-600/20 rounded-lg", children: _jsxs("p", { className: "text-sm text-amber-300", children: [_jsx("span", { className: "font-medium", children: "Note:" }), " Some behaviors may require a system restart to take full effect. Changes to core behaviors will be applied immediately where possible."] }) })] }))] }));
}
