import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Plus, Target, Flame } from 'lucide-react';
const todaysMeals = [
    { name: 'Breakfast', calories: 420, time: '8:00 AM' },
    { name: 'Lunch', calories: 650, time: '12:30 PM' },
    { name: 'Snack', calories: 180, time: '3:00 PM' },
    { name: 'Dinner', calories: 580, time: '7:00 PM' }
];
export function CalorieTracker() {
    const totalCalories = todaysMeals.reduce((sum, meal) => sum + meal.calories, 0);
    const targetCalories = 2200;
    const remainingCalories = targetCalories - totalCalories;
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-semibold text-white", children: "Calorie Tracker" }), _jsxs("button", { className: "flex items-center space-x-2 px-3 py-1.5 bg-emerald-600 hover:bg-emerald-700 rounded-lg transition-colors", children: [_jsx(Plus, { className: "w-4 h-4 text-white" }), _jsx("span", { className: "text-white text-sm", children: "Add Meal" })] })] }), _jsxs("div", { className: "grid grid-cols-3 gap-4 mb-6", children: [_jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Flame, { className: "w-5 h-5 text-orange-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: totalCalories }), _jsx("p", { className: "text-xs text-slate-400", children: "Consumed" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Target, { className: "w-5 h-5 text-blue-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: targetCalories }), _jsx("p", { className: "text-xs text-slate-400", children: "Target" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx("div", { className: "w-5 h-5 bg-emerald-400 rounded-full mx-auto mb-2" }), _jsx("p", { className: `text-lg font-bold ${remainingCalories >= 0 ? 'text-emerald-400' : 'text-red-400'}`, children: Math.abs(remainingCalories) }), _jsx("p", { className: "text-xs text-slate-400", children: remainingCalories >= 0 ? 'Remaining' : 'Over' })] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("div", { className: "flex justify-between text-sm text-slate-400 mb-2", children: [_jsx("span", { children: "Daily Progress" }), _jsxs("span", { children: [Math.round((totalCalories / targetCalories) * 100), "%"] })] }), _jsx("div", { className: "bg-slate-700 rounded-full h-2", children: _jsx(motion.div, { initial: { width: 0 }, animate: { width: `${Math.min((totalCalories / targetCalories) * 100, 100)}%` }, transition: { duration: 0.8 }, className: "bg-gradient-to-r from-emerald-500 to-emerald-400 h-2 rounded-full" }) })] }), _jsx("div", { className: "space-y-3", children: todaysMeals.map((meal, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: meal.name }), _jsx("p", { className: "text-xs text-slate-400", children: meal.time })] }), _jsxs("p", { className: "text-sm font-medium text-emerald-400", children: [meal.calories, " cal"] })] }, index))) })] }));
}
