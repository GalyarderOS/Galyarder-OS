import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Lightbulb, Star, TrendingUp, Tag, Zap } from 'lucide-react';
import { useMetaMemoryStore } from '../store/metaMemoryStore';
export function InsightTimeline() {
    const { insights, toggleStarInsight } = useMetaMemoryStore();
    const getInsightTypeColor = (type) => {
        switch (type) {
            case 'pattern': return 'text-blue-400';
            case 'correlation': return 'text-purple-400';
            default: return 'text-slate-400';
        }
    };
    const getConfidenceColor = (confidence) => {
        if (confidence >= 80)
            return 'text-emerald-400';
        if (confidence >= 60)
            return 'text-amber-400';
        return 'text-red-400';
    };
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.2 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Lightbulb, { className: "w-5 h-5 text-amber-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Insight Timeline" })] }), _jsx("div", { className: "flex items-center space-x-2", children: _jsxs("span", { className: "text-xs text-slate-400", children: [insights.length, " insights generated"] }) })] }), _jsx("div", { className: "space-y-4", children: insights.map((insight, index) => (_jsx(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: "p-4 bg-slate-800/30 rounded-lg", children: _jsxs("div", { className: "flex items-start space-x-3", children: [_jsx("div", { className: "p-2 bg-slate-700/50 rounded-lg", children: _jsx(Lightbulb, { className: `w-4 h-4 ${getInsightTypeColor(insight.type)}` }) }), _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("h4", { className: "text-sm font-medium text-white", children: insight.title }), _jsx("button", { onClick: () => toggleStarInsight(insight.id), className: "p-1 hover:bg-slate-700 rounded transition-colors", children: insight.isStarred ? (_jsx(Star, { className: "w-3 h-3 text-amber-400 fill-current" })) : (_jsx(Star, { className: "w-3 h-3 text-slate-400" })) })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: `text-xs px-2 py-1 rounded-full bg-slate-700 ${getInsightTypeColor(insight.type)}`, children: insight.type }), _jsx("span", { className: "text-xs text-slate-400", children: new Date(insight.createdAt).toLocaleDateString() })] })] }), _jsx("p", { className: "text-sm text-slate-300 mb-3", children: insight.description }), _jsxs("div", { className: "flex items-center justify-between mb-3 text-xs", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-slate-400", children: "Source:" }), _jsx("span", { className: "text-white", children: insight.source.modules.join(', ') })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(TrendingUp, { className: `w-3 h-3 ${getConfidenceColor(insight.confidence)}` }), _jsxs("span", { className: `${getConfidenceColor(insight.confidence)}`, children: [insight.confidence, "% confidence"] })] })] }), insight.actionable && insight.actions && (_jsxs("div", { className: "mb-3 p-3 bg-blue-600/10 border-l-2 border-blue-500 rounded", children: [_jsxs("h6", { className: "text-xs font-medium text-blue-400 mb-2 flex items-center space-x-2", children: [_jsx(Zap, { className: "w-3 h-3" }), _jsx("span", { children: "Actionable Insights:" })] }), _jsx("ul", { className: "space-y-1", children: insight.actions.map((action, actionIndex) => (_jsxs("li", { className: "text-xs text-blue-200 flex items-start space-x-2", children: [_jsx("span", { children: "\u2022" }), _jsx("span", { children: action })] }, actionIndex))) })] })), _jsx("div", { className: "flex flex-wrap gap-1", children: insight.tags.map(tag => (_jsxs("span", { className: "text-xs bg-slate-700 text-slate-300 px-2 py-1 rounded flex items-center space-x-1", children: [_jsx(Tag, { className: "w-2 h-2" }), _jsx("span", { children: tag })] }, tag))) })] })] }) }, insight.id))) }), _jsx("div", { className: "mt-6 p-3 bg-amber-600/20 rounded-lg", children: _jsx("p", { className: "text-sm text-amber-300", children: "\uD83D\uDCA1 Your system continuously analyzes patterns across modules to generate personalized insights." }) })] }));
}
