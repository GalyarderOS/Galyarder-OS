import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { BookOpen, Star, Clock, TrendingUp } from 'lucide-react';
import { useKnowledgeStore } from '../store/knowledgeStore';
export function KnowledgeBoard() {
    const { books } = useKnowledgeStore();
    const currentlyReading = books.filter(book => book.status === 'reading');
    const completedBooks = books.filter(book => book.status === 'completed');
    const wishlistBooks = books.filter(book => book.status === 'wishlist');
    const statusColors = {
        reading: 'border-blue-400 bg-blue-400/10',
        completed: 'border-emerald-400 bg-emerald-400/10',
        wishlist: 'border-amber-400 bg-amber-400/10',
        abandoned: 'border-red-400 bg-red-400/10'
    };
    const getReadingStreak = () => {
        const today = new Date();
        const oneWeekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
        return completedBooks.filter(book => book.completedDate && new Date(book.completedDate) >= oneWeekAgo).length;
    };
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.1 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-6", children: [_jsx(BookOpen, { className: "w-5 h-5 text-emerald-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Knowledge Board" })] }), _jsxs("div", { className: "grid grid-cols-3 gap-4 mb-6", children: [_jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(BookOpen, { className: "w-5 h-5 text-blue-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: currentlyReading.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Currently Reading" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(TrendingUp, { className: "w-5 h-5 text-emerald-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: completedBooks.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Books Completed" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Clock, { className: "w-5 h-5 text-amber-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: getReadingStreak() }), _jsx("p", { className: "text-xs text-slate-400", children: "This Week" })] })] }), _jsxs("div", { className: "mb-6", children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Currently Reading" }), _jsx("div", { className: "space-y-3", children: currentlyReading.map((book, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: `p-4 border rounded-lg ${statusColors[book.status]}`, children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { className: "flex-1", children: [_jsx("h5", { className: "text-sm font-medium text-white", children: book.title }), _jsxs("p", { className: "text-xs text-slate-400 mb-1", children: ["by ", book.author] }), _jsx("p", { className: "text-xs text-slate-400", children: book.category })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-sm font-medium text-white", children: [book.progress, "%"] }), book.currentPage && book.totalPages && (_jsxs("p", { className: "text-xs text-slate-400", children: [book.currentPage, "/", book.totalPages, " pages"] }))] })] }), _jsx("div", { className: "bg-slate-700 rounded-full h-2 mb-2", children: _jsx(motion.div, { initial: { width: 0 }, animate: { width: `${book.progress}%` }, transition: { delay: 0.3 + index * 0.1, duration: 0.8 }, className: "bg-gradient-to-r from-blue-500 to-blue-400 h-2 rounded-full" }) }), book.notes && (_jsxs("p", { className: "text-xs text-slate-300 italic", children: ["\"", book.notes, "\""] }))] }, book.id))) })] }), _jsxs("div", { className: "mb-6", children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Recently Completed" }), _jsx("div", { className: "space-y-3", children: completedBooks.slice(0, 3).map((book, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.2 + index * 0.1 }, className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: book.title }), _jsxs("p", { className: "text-xs text-slate-400", children: ["by ", book.author] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [book.rating && (_jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(Star, { className: "w-3 h-3 text-yellow-400 fill-current" }), _jsx("span", { className: "text-xs text-yellow-400", children: book.rating })] })), _jsx("span", { className: "text-xs text-slate-400", children: book.completedDate && new Date(book.completedDate).toLocaleDateString() })] })] }, book.id))) })] }), _jsx("div", { className: "p-3 bg-emerald-600/20 rounded-lg", children: _jsxs("p", { className: "text-sm text-emerald-300", children: ["\uD83D\uDCDA Reading Goal: ", completedBooks.length, "/12 books this year (", Math.round((completedBooks.length / 12) * 100), "% complete)"] }) })] }));
}
