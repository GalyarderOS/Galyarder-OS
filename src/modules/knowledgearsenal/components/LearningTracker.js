import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Plus, Target, Clock, TrendingUp, BookOpen } from 'lucide-react';
import { useKnowledgeStore } from '../store/knowledgeStore';
export function LearningTracker() {
    const { learningGoals, studySessions } = useKnowledgeStore();
    const activeGoals = learningGoals.filter(goal => goal.status === 'active');
    const completedGoals = learningGoals.filter(goal => goal.status === 'completed');
    const totalStudyTime = studySessions.reduce((sum, session) => sum + session.duration, 0);
    const averageEffectiveness = studySessions.length > 0
        ? studySessions.reduce((sum, session) => sum + session.effectiveness, 0) / studySessions.length
        : 0;
    const priorityColors = {
        high: 'border-red-400 bg-red-400/10',
        medium: 'border-amber-400 bg-amber-400/10',
        low: 'border-emerald-400 bg-emerald-400/10'
    };
    const categoryColors = {
        technical: 'text-blue-400',
        personal: 'text-emerald-400',
        professional: 'text-purple-400',
        creative: 'text-pink-400'
    };
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Target, { className: "w-5 h-5 text-blue-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Learning Tracker" })] }), _jsxs("button", { className: "flex items-center space-x-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors", children: [_jsx(Plus, { className: "w-4 h-4 text-white" }), _jsx("span", { className: "text-white text-sm", children: "Add Goal" })] })] }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4 mb-6", children: [_jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Target, { className: "w-5 h-5 text-blue-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: activeGoals.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Active Goals" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(TrendingUp, { className: "w-5 h-5 text-emerald-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: completedGoals.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Completed" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Clock, { className: "w-5 h-5 text-amber-400 mx-auto mb-2" }), _jsxs("p", { className: "text-lg font-bold text-white", children: [Math.round(totalStudyTime / 60), "h"] }), _jsx("p", { className: "text-xs text-slate-400", children: "Study Time" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(BookOpen, { className: "w-5 h-5 text-purple-400 mx-auto mb-2" }), _jsxs("p", { className: "text-lg font-bold text-white", children: [averageEffectiveness.toFixed(1), "/10"] }), _jsx("p", { className: "text-xs text-slate-400", children: "Avg Effectiveness" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "text-sm font-medium text-white", children: "Active Learning Goals" }), activeGoals.map((goal, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: `p-4 border rounded-lg ${priorityColors[goal.priority]}`, children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { className: "flex-1", children: [_jsx("h5", { className: "text-sm font-medium text-white mb-1", children: goal.title }), _jsx("p", { className: "text-xs text-slate-300 mb-2", children: goal.description }), _jsxs("div", { className: "flex items-center space-x-4 text-xs text-slate-400", children: [_jsx("span", { className: `capitalize ${categoryColors[goal.category]}`, children: goal.category }), _jsxs("span", { children: ["Due: ", new Date(goal.targetDate).toLocaleDateString()] }), _jsxs("span", { className: "capitalize", children: [goal.priority, " priority"] })] })] }), _jsx("div", { className: "text-right", children: _jsxs("p", { className: "text-sm font-medium text-white", children: [goal.progress, "%"] }) })] }), _jsx("div", { className: "bg-slate-700 rounded-full h-2", children: _jsx(motion.div, { initial: { width: 0 }, animate: { width: `${goal.progress}%` }, transition: { delay: 0.3 + index * 0.1, duration: 0.8 }, className: "bg-gradient-to-r from-blue-500 to-blue-400 h-2 rounded-full" }) })] }, goal.id)))] }), _jsxs("div", { className: "mt-6", children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Recent Study Sessions" }), _jsx("div", { className: "space-y-2", children: studySessions.slice(0, 3).map((session, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.2 + index * 0.1 }, className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: session.subject }), _jsxs("p", { className: "text-xs text-slate-400", children: [session.duration, " min \u2022 ", new Date(session.date).toLocaleDateString()] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-sm text-blue-400", children: [session.effectiveness, "/10"] }), _jsx("p", { className: "text-xs text-slate-400 capitalize", children: session.type })] })] }, session.id))) })] }), _jsx("div", { className: "mt-6 p-3 bg-blue-600/20 rounded-lg", children: _jsx("p", { className: "text-sm text-blue-300", children: "\uD83C\uDFAF You're making great progress! Consider adding a new learning goal to expand your knowledge." }) })] }));
}
