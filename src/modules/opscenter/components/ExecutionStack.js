import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { ListChecks, Plus, CheckSquare, Clock } from 'lucide-react';
import { useOpsCenterStore } from '../store/opsCenterStore';
export function ExecutionStack() {
    const { workflows } = useOpsCenterStore();
    const getCompletionPercentage = (workflow) => {
        const totalItems = workflow.steps.reduce((sum, step) => sum + step.checklistItems.length, 0);
        const completedItems = workflow.steps.reduce((sum, step) => sum + step.checklistItems.filter((item) => item.isCompleted).length, 0);
        return totalItems > 0 ? Math.round((completedItems / totalItems) * 100) : 0;
    };
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.2 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(ListChecks, { className: "w-5 h-5 text-amber-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Execution Stack" })] }), _jsxs("button", { className: "flex items-center space-x-2 px-3 py-1.5 bg-amber-600 hover:bg-amber-700 rounded-lg transition-colors", children: [_jsx(Plus, { className: "w-4 h-4 text-white" }), _jsx("span", { className: "text-white text-sm", children: "New Workflow" })] })] }), _jsx("div", { className: "space-y-4", children: workflows.filter(w => w.isActive).map((workflow, index) => {
                    const completionPercentage = getCompletionPercentage(workflow);
                    return (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: "p-4 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { children: [_jsx("h4", { className: "text-sm font-medium text-white", children: workflow.name }), _jsx("p", { className: "text-xs text-slate-400", children: workflow.description })] }), _jsx("div", { className: "text-right", children: _jsx("span", { className: "text-xs px-2 py-1 rounded bg-amber-600/20 text-amber-400", children: workflow.category }) })] }), _jsxs("div", { className: "mb-3", children: [_jsxs("div", { className: "flex justify-between text-xs text-slate-400 mb-1", children: [_jsx("span", { children: "Completion" }), _jsxs("span", { children: [completionPercentage, "%"] })] }), _jsx("div", { className: "bg-slate-700 rounded-full h-2", children: _jsx(motion.div, { initial: { width: 0 }, animate: { width: `${completionPercentage}%` }, transition: { delay: 0.3 + index * 0.1, duration: 0.8 }, className: "bg-gradient-to-r from-amber-500 to-amber-400 h-2 rounded-full" }) })] }), _jsxs("div", { className: "space-y-2", children: [workflow.steps.slice(0, 3).map((step, stepIndex) => {
                                        const completedItems = step.checklistItems.filter(item => item.isCompleted).length;
                                        const totalItems = step.checklistItems.length;
                                        return (_jsxs("div", { className: "flex items-center justify-between p-2 bg-slate-700/30 rounded", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "w-5 h-5 rounded-full bg-slate-600 flex items-center justify-center text-xs text-white", children: step.order }), _jsx("span", { className: "text-sm text-white", children: step.name })] }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsxs("div", { className: "flex items-center space-x-1 text-xs text-slate-400", children: [_jsx(CheckSquare, { className: "w-3 h-3 text-emerald-400" }), _jsxs("span", { children: [completedItems, "/", totalItems] })] }), _jsxs("div", { className: "flex items-center space-x-1 text-xs text-slate-400", children: [_jsx(Clock, { className: "w-3 h-3" }), _jsxs("span", { children: [step.estimatedDuration, "m"] })] })] })] }, step.id));
                                    }), workflow.steps.length > 3 && (_jsxs("div", { className: "text-center text-xs text-slate-400", children: ["+", workflow.steps.length - 3, " more steps"] }))] })] }, workflow.id));
                }) }), _jsxs("div", { className: "mt-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsx("h4", { className: "text-sm font-medium text-white", children: "Workflow Templates" }), _jsx("button", { className: "text-xs text-amber-400 hover:text-amber-300 transition-colors", children: "View All" })] }), _jsx("div", { className: "grid grid-cols-2 gap-3", children: [
                            { name: 'Project Kickoff', steps: 5, category: 'project' },
                            { name: 'Content Creation', steps: 8, category: 'marketing' },
                            { name: 'Client Offboarding', steps: 6, category: 'client' },
                            { name: 'Website Launch', steps: 12, category: 'development' }
                        ].map((template, index) => (_jsxs(motion.div, { initial: { opacity: 0, scale: 0.9 }, animate: { opacity: 1, scale: 1 }, transition: { delay: 0.2 + index * 0.1 }, className: "p-3 bg-slate-800/30 rounded-lg cursor-pointer hover:bg-slate-800/50 transition-colors", children: [_jsx("h5", { className: "text-sm font-medium text-white mb-1", children: template.name }), _jsxs("div", { className: "flex items-center justify-between text-xs", children: [_jsxs("span", { className: "text-slate-400", children: [template.steps, " steps"] }), _jsx("span", { className: "px-2 py-1 rounded bg-slate-700 text-amber-400", children: template.category })] })] }, index))) })] }), _jsx("div", { className: "mt-6 p-3 bg-amber-600/20 rounded-lg", children: _jsx("p", { className: "text-sm text-amber-300", children: "\u26A1 Standardized workflows increase execution efficiency by 35% and reduce errors." }) })] }));
}
