import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Users, Plus, AlertCircle, CheckCircle, FileText } from 'lucide-react';
import { useDigitalSovereigntyStore } from '../store/digitalSovereigntyStore';
export function LegacyPass() {
    const { inheritanceProtocols, digitalAssets } = useDigitalSovereigntyStore();
    const getAssetName = (assetId) => {
        const asset = digitalAssets.find(a => a.id === assetId);
        return asset ? asset.name : 'Unknown Asset';
    };
    const getProtocolStatusColor = (status) => {
        switch (status) {
            case 'active': return 'text-emerald-400';
            case 'draft': return 'text-amber-400';
            case 'archived': return 'text-slate-400';
            default: return 'text-slate-400';
        }
    };
    const getDaysSinceReview = (lastReviewed) => {
        const lastDate = new Date(lastReviewed);
        const today = new Date();
        const diffTime = Math.abs(today.getTime() - lastDate.getTime());
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        return diffDays;
    };
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.1 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Users, { className: "w-5 h-5 text-purple-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Legacy Pass" })] }), _jsxs("button", { className: "flex items-center space-x-2 px-3 py-1.5 bg-purple-600 hover:bg-purple-700 rounded-lg transition-colors", children: [_jsx(Plus, { className: "w-4 h-4 text-white" }), _jsx("span", { className: "text-white text-sm", children: "New Protocol" })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 mb-6", children: [_jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx("p", { className: "text-lg font-bold text-white", children: inheritanceProtocols.filter(p => p.status === 'active').length }), _jsx("p", { className: "text-xs text-slate-400", children: "Active Protocols" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx("p", { className: "text-lg font-bold text-white", children: digitalAssets.filter(a => a.inheritanceStatus === 'configured').length }), _jsx("p", { className: "text-xs text-slate-400", children: "Protected Assets" })] })] }), _jsx("div", { className: "space-y-4", children: inheritanceProtocols.map((protocol, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: "p-4 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex items-center space-x-2 mb-1", children: [_jsx("h4", { className: "text-sm font-medium text-white", children: protocol.name }), _jsx("span", { className: `text-xs ${getProtocolStatusColor(protocol.status)}`, children: protocol.status })] }), _jsx("p", { className: "text-xs text-slate-400", children: protocol.description })] }), _jsx("div", { className: "text-right", children: _jsxs("div", { className: "flex items-center space-x-2 text-xs text-slate-400", children: [_jsx(FileText, { className: "w-3 h-3" }), _jsxs("span", { children: ["Last reviewed: ", getDaysSinceReview(protocol.lastReviewed), " days ago"] })] }) })] }), _jsxs("div", { className: "mb-3", children: [_jsx("p", { className: "text-xs text-slate-400 mb-1", children: "Beneficiaries:" }), _jsx("div", { className: "space-y-2", children: protocol.beneficiaries.map(beneficiary => (_jsxs("div", { className: "flex items-center justify-between p-2 bg-slate-700/30 rounded", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-white", children: beneficiary.name }), _jsx("p", { className: "text-xs text-slate-400", children: beneficiary.relationship })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-xs text-slate-300", children: [beneficiary.assets.length, " assets"] }), _jsxs("div", { className: "flex flex-wrap gap-1 mt-1", children: [beneficiary.assets.slice(0, 2).map(assetId => (_jsx("span", { className: "text-xs bg-slate-700 text-slate-300 px-2 py-1 rounded", children: getAssetName(assetId) }, assetId))), beneficiary.assets.length > 2 && (_jsxs("span", { className: "text-xs text-slate-400", children: ["+", beneficiary.assets.length - 2] }))] })] })] }, beneficiary.id))) })] }), _jsxs("div", { className: "mb-3", children: [_jsx("p", { className: "text-xs text-slate-400 mb-1", children: "Activation Conditions:" }), _jsx("div", { className: "space-y-1", children: protocol.activationConditions.map((condition, condIndex) => (_jsxs("div", { className: "flex items-center space-x-2 text-xs text-slate-300", children: [_jsx(AlertCircle, { className: "w-3 h-3 text-amber-400" }), _jsx("span", { children: condition })] }, condIndex))) })] }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-slate-400 mb-1", children: "Executors:" }), _jsx("div", { className: "flex flex-wrap gap-2", children: protocol.executors.map((executor, execIndex) => (_jsx("span", { className: "text-xs bg-purple-600/20 text-purple-300 px-2 py-1 rounded", children: executor }, execIndex))) })] })] }, protocol.id))) }), _jsxs("div", { className: "mt-6 p-3 bg-purple-600/20 rounded-lg", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx(CheckCircle, { className: "w-4 h-4 text-purple-400" }), _jsx("h4", { className: "text-sm font-medium text-purple-300", children: "Protocol Health Check" })] }), _jsxs("p", { className: "text-sm text-purple-200", children: ["Your inheritance protocols are up to date. Next scheduled review: ", new Date('2024-07-10').toLocaleDateString()] })] })] }));
}
