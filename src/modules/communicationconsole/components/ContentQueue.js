import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Plus, Calendar, Eye, Edit, Send } from 'lucide-react';
import { useCommunicationStore } from '../store/communicationStore';
export function ContentQueue() {
    const { contentQueue, publishContent } = useCommunicationStore();
    const statusColors = {
        draft: 'border-slate-400 bg-slate-400/10',
        review: 'border-amber-400 bg-amber-400/10',
        scheduled: 'border-blue-400 bg-blue-400/10',
        published: 'border-emerald-400 bg-emerald-400/10',
        archived: 'border-red-400 bg-red-400/10'
    };
    const platformIcons = {
        blog: '📝',
        linkedin: '💼',
        twitter: '🐦',
        youtube: '📺',
        medium: '📖',
        newsletter: '📧',
        website: '🌐'
    };
    const typeIcons = {
        article: '📄',
        post: '📱',
        video: '🎥',
        podcast: '🎙️',
        newsletter: '📧',
        presentation: '📊'
    };
    const draftContent = contentQueue.filter(c => c.status === 'draft');
    const scheduledContent = contentQueue.filter(c => c.status === 'scheduled');
    const publishedContent = contentQueue.filter(c => c.status === 'published');
    return (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "glass-card rounded-xl p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Edit, { className: "w-5 h-5 text-blue-400" }), _jsx("h3", { className: "text-xl font-semibold text-white", children: "Content Queue" })] }), _jsxs("button", { className: "flex items-center space-x-2 px-3 py-1.5 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors", children: [_jsx(Plus, { className: "w-4 h-4 text-white" }), _jsx("span", { className: "text-white text-sm", children: "New Content" })] })] }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4 mb-6", children: [_jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Edit, { className: "w-5 h-5 text-slate-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: draftContent.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Drafts" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Calendar, { className: "w-5 h-5 text-blue-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: scheduledContent.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Scheduled" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Send, { className: "w-5 h-5 text-emerald-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: publishedContent.length }), _jsx("p", { className: "text-xs text-slate-400", children: "Published" })] }), _jsxs("div", { className: "bg-slate-800/50 rounded-lg p-4 text-center", children: [_jsx(Eye, { className: "w-5 h-5 text-purple-400 mx-auto mb-2" }), _jsx("p", { className: "text-lg font-bold text-white", children: publishedContent.reduce((sum, c) => sum + (c.engagement?.views || 0), 0) }), _jsx("p", { className: "text-xs text-slate-400", children: "Total Views" })] })] }), _jsxs("div", { className: "mb-6", children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Draft Content" }), _jsx("div", { className: "space-y-3", children: draftContent.map((content, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: `p-4 border rounded-lg ${statusColors[content.status]}`, children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx("span", { className: "text-lg", children: typeIcons[content.type] }), _jsx("span", { className: "text-lg", children: platformIcons[content.platform] }), _jsx("h5", { className: "text-sm font-medium text-white", children: content.title })] }), content.excerpt && (_jsx("p", { className: "text-xs text-slate-300 mb-2", children: content.excerpt })), _jsxs("div", { className: "flex items-center space-x-4 text-xs text-slate-400", children: [_jsxs("span", { children: [content.wordCount, " words"] }), _jsxs("span", { children: [content.estimatedReadTime, " min read"] }), _jsxs("span", { children: ["Updated: ", new Date(content.updatedAt).toLocaleDateString()] })] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("button", { className: "p-2 hover:bg-slate-700 rounded-lg transition-colors", children: _jsx(Edit, { className: "w-4 h-4 text-slate-400 hover:text-white" }) }), _jsx("button", { onClick: () => publishContent(content.id), className: "p-2 hover:bg-emerald-600/20 rounded-lg transition-colors", children: _jsx(Send, { className: "w-4 h-4 text-emerald-400" }) })] })] }), _jsx("div", { className: "flex flex-wrap gap-1", children: content.tags.slice(0, 3).map(tag => (_jsx("span", { className: "text-xs bg-slate-700 text-slate-300 px-2 py-1 rounded", children: tag }, tag))) })] }, content.id))) })] }), scheduledContent.length > 0 && (_jsxs("div", { className: "mb-6", children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Scheduled Content" }), _jsx("div", { className: "space-y-3", children: scheduledContent.map((content, index) => (_jsx(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: `p-4 border rounded-lg ${statusColors[content.status]}`, children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("span", { className: "text-lg", children: typeIcons[content.type] }), _jsx("span", { className: "text-lg", children: platformIcons[content.platform] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: content.title }), _jsxs("p", { className: "text-xs text-slate-400", children: ["Scheduled: ", content.scheduledDate && new Date(content.scheduledDate).toLocaleDateString()] })] })] }), _jsx(Calendar, { className: "w-4 h-4 text-blue-400" })] }) }, content.id))) })] })), _jsxs("div", { children: [_jsx("h4", { className: "text-sm font-medium text-white mb-4", children: "Recently Published" }), _jsx("div", { className: "space-y-2", children: publishedContent.slice(0, 3).map((content, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.1 + index * 0.1 }, className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("span", { className: "text-sm", children: typeIcons[content.type] }), _jsx("span", { className: "text-sm", children: platformIcons[content.platform] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-white", children: content.title }), _jsxs("p", { className: "text-xs text-slate-400", children: ["Published: ", content.publishDate && new Date(content.publishDate).toLocaleDateString()] })] })] }), content.engagement && (_jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-sm text-emerald-400", children: [content.engagement.views, " views"] }), _jsxs("p", { className: "text-xs text-slate-400", children: [content.engagement.likes, " likes"] })] }))] }, content.id))) })] }), _jsx("div", { className: "mt-6 p-3 bg-blue-600/20 rounded-lg", children: _jsxs("p", { className: "text-sm text-blue-300", children: ["\u270D\uFE0F You have ", draftContent.length, " drafts ready for review. Keep your content pipeline flowing!"] }) })] }));
}
